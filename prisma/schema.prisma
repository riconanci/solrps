// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  displayName  String?
  walletPubkey String?
  mockBalance  Int      @default(100000)

  sessions     Session[] @relation("creatorSessions")
  challenges   Session[] @relation("challengerSessions")
  wins         MatchResult[] @relation("winnerRelation")

  @@map("users")
}

model Session {
  id              String   @id @default(cuid())
  createdAt       DateTime @default(now())
  status          String   // OPEN, LOCKED, AWAITING_REVEAL, RESOLVED, FORFEITED, CANCELLED
  rounds          Int
  stakePerRound   Int
  totalStake      Int
  commitHash      String
  saltHint        String?
  creatorId       String
  creator         User     @relation("creatorSessions", fields: [creatorId], references: [id])
  challengerId    String?
  challenger      User?    @relation("challengerSessions", fields: [challengerId], references: [id])
  creatorRevealed Boolean  @default(false)
  revealDeadline  DateTime
  isPrivate       Boolean  @default(false)
  privateCode     String?  @unique
  creatorMoves    Json?    // PostgreSQL native JSON
  challengerMoves Json?    // PostgreSQL native JSON
  result          MatchResult?

  @@map("sessions")
}

model MatchResult {
  id             String   @id @default(cuid())
  sessionId      String   @unique
  session        Session  @relation(fields: [sessionId], references: [id])
  createdAt      DateTime @default(now())
  roundsOutcome  Json     // PostgreSQL native JSON
  creatorWins    Int
  challengerWins Int
  draws          Int
  overall        String   // CREATOR, CHALLENGER, DRAW
  pot            Int
  feesTreasury   Int
  feesBurn       Int
  payoutWinner   Int
  winnerUserId   String?
  winner         User?    @relation("winnerRelation", fields: [winnerUserId], references: [id])
  replaySeed     String?

  @@map("match_results")
}